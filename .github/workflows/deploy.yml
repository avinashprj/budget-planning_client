# name: Deploy

# on: [push]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Copy repository contents 
#       uses: appleboy/scp-action@master
#       env:
#         HOST: ${{ secrets.HOST }}
#         USERNAME: ${{ secrets.USERNAME }}
#         PORT: ${{ secrets.PORT }}
#         KEY: ${{ secrets.SSHKEY }}
#       with:
#         source: "."
#         target: "/var/www/mywebsite"

#     - name: Executing remote command
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.HOST }}
#         USERNAME: ${{ secrets.USERNAME }}
#         PORT: ${{ secrets.PORT }}
#         KEY: ${{ secrets.SSHKEY }}
#       env:
#         REACT_APP_API_KEY: ${{ secrets.API_KEY }}
#         REACT_APP_AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
#         REACT_APP_PROJECT_ID: ${{ secrets.PROJECT_ID }}
#         REACT_APP_STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
#         REACT_APP_MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
#         REACT_APP_APP_ID: ${{ secrets.APP_ID }}
#       with:
#         envs: REACT_APP_API_KEY, REACT_APP_AUTH_DOMAIN, REACT_APP_PROJECT_ID
#         script: | 
#           cat $REACT_APP_API_KEY > a.q
#           mkdir a
name: Deploy

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Copy repository contents via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
      with:
        source: "."
        target: "/var/www/mywebsite"

    - name: Executing remote command
      uses: appleboy/ssh-action@master
      env:
        APP_ID: ${{ secrets.APP_ID }}
        API_KEY: ${{ secrets.API_KEY }}
        AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
        MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}

      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        envs: APP_ID, API_KEY, AUTH_DOMAIN, MESSAGING_SENDER_ID, PROJECT_ID, STORAGE_BUCKET
        script: |
          export NVM_DIR="$HOME/.nvm"
          # [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          source ~/.nvm/nvm.sh
          nvm install --lts
          node -v
          npm -v
          rm /var/www/mywebsite/.env
          touch /var/www/mywebsite/.env
          echo "REACT_APP_APP_ID=$APP_ID" >>  /var/www/mywebsite/.env 
          echo "REACT_APP_API_KEY=$API_KEY" >>  /var/www/mywebsite/.env  
          echo "REACT_APP_AUTH_DOMAIN=$AUTH_DOMAIN" >>  /var/www/mywebsite/.env  
          echo "REACT_APP_MESSAGING_SENDER_ID=$MESSAGING_SENDER_ID" >>  /var/www/mywebsite/.env  
          echo "REACT_APP_PROJECT_ID=$PROJECT_ID" >>  /var/www/mywebsite/.env 
          echo "REACT_APP_STORAGE_BUCKET=$STORAGE_BUCKET" >>  /var/www/mywebsite/.env 

          npm ci
          npm start